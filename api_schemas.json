{
  "info": {
    "title": "The Projection Wizard API",
    "description": "REST API for ML pipeline functionality",
    "version": "1.0.0",
    "base_url": "https://d32b-62-96-151-154.ngrok-free.app"
  },
  "endpoints": {
    "/": {
      "method": "GET",
      "summary": "Root endpoint providing API information",
      "response": {
        "message": "The Projection Wizard API",
        "version": "1.0.0",
        "docs": "/docs",
        "redoc": "/redoc"
      }
    },
    "/health": {
      "method": "GET",
      "summary": "Health check endpoint",
      "response": {
        "status": "healthy"
      }
    },
    "/api/upload": {
      "method": "POST",
      "summary": "Upload CSV file and initialize ML pipeline run",
      "content_type": "multipart/form-data",
      "request": {
        "file": "binary"
      },
      "response": {
        "api_version": "v1",
        "run_id": "string",
        "shape": [
          "integer (rows)",
          "integer (columns)"
        ],
        "preview": [
          ["column headers as strings"],
          ["first row data as strings"],
          ["...up to 5 rows"]
        ]
      }
    },
    "/api/target-suggestion": {
      "method": "GET",
      "summary": "Get target column and task type suggestions",
      "parameters": {
        "run_id": "string (required)"
      },
      "response": {
        "api_version": "v1",
        "columns": {
          "column_name": {
            "unique_values": "integer",
            "missing_values": "integer", 
            "missing_percentage": "float",
            "data_type": "string",
            "sample_values": ["string array"]
          }
        },
        "suggested_column": "string",
        "suggested_task_type": "classification | regression",
        "suggested_ml_type": "string",
        "confidence": "float | null",
        "available_task_types": ["classification", "regression"],
        "available_ml_types": {
          "task_type": [
            {
              "value": "string",
              "description": "string"
            }
          ]
        },
        "data_preview": [["sample data rows"]]
      }
    },
    "/api/confirm-target": {
      "method": "POST",
      "summary": "Confirm target column and task type",
      "request": {
        "run_id": "string",
        "confirmed_column": "string",
        "task_type": "classification | regression", 
        "ml_type": "string"
      },
      "response": {
        "api_version": "v1",
        "status": "success",
        "message": "Target configuration saved successfully",
        "target_info": {}
      }
    },
    "/api/feature-suggestion": {
      "method": "GET",
      "summary": "Get feature schema suggestions",
      "parameters": {
        "run_id": "string (required)",
        "top_n": "integer (optional, default: 5)"
      },
      "response": {
        "api_version": "v1",
        "feature_schemas": {
          "feature_name": {
            "initial_dtype": "string",
            "suggested_encoding_role": "string",
            "statistics": {
              "unique_values": "integer",
              "missing_values": "integer",
              "missing_percentage": "float",
              "data_type": "string",
              "sample_values": ["string array"]
            },
            "is_key_feature": "boolean"
          }
        },
        "key_features": ["ordered by importance"],
        "available_dtypes": {
          "dtype": "description"
        },
        "available_encoding_roles": {
          "role": "description"
        },
        "target_info": {},
        "data_preview": [["sample data rows"]]
      }
    },
    "/api/confirm-features": {
      "method": "POST",
      "summary": "Confirm feature schemas and start pipeline",
      "request": {
        "run_id": "string",
        "confirmed_schemas": {
          "feature_name": {
            "final_dtype": "string",
            "final_encoding_role": "string"
          }
        },
        "total_features_reviewed": "integer | null",
        "key_features_modified": ["string array | null"]
      },
      "response": {
        "api_version": "v1",
        "status": "pipeline_started",
        "message": "Feature schemas confirmed and pipeline started",
        "summary": {}
      }
    },
    "/api/status": {
      "method": "GET",
      "summary": "Get pipeline status",
      "parameters": {
        "run_id": "string (required)"
      },
      "response": {
        "api_version": "v1",
        "stage": "string (e.g., 'prep', 'automl', 'completed')",
        "status": "pending | running | processing | completed | failed",
        "message": "string | null",
        "progress_pct": "integer | null (0-100)"
      }
    },
    "/api/results": {
      "method": "GET",
      "summary": "Get final pipeline results",
      "parameters": {
        "run_id": "string (required)"
      },
      "response": {
        "api_version": "v1",
        "model_metrics": {
          "metric_name": "float"
        },
        "top_features": ["string array"],
        "explainability": {
          "key": "string"
        },
        "download_url": "string | null",
        "run_summary": {
          "run_id": "string",
          "timestamp": "string | null",
          "original_filename": "string | null",
          "initial_shape": [
            "integer (rows)",
            "integer (columns)"
          ],
          "target_info": {}
        },
        "pipeline_status": {
          "stage": "string",
          "status": "pending | running | processing | completed | failed",
          "message": "string | null",
          "errors": ["string array | null"]
        },
        "validation_summary": {
          "overall_success": "boolean",
          "total_expectations": "integer",
          "successful_expectations": "integer",
          "failed_expectations": "integer"
        },
        "data_prep_summary": {
          "final_shape": [
            "integer (rows)",
            "integer (columns)"
          ],
          "cleaning_steps": ["string array"],
          "profiling_report_available": "boolean",
          "profiling_report_filename": "string | null"
        },
        "automl_summary": {
          "tool_used": "string | null",
          "best_model_name": "string | null",
          "target_column": "string | null",
          "task_type": "string | null",
          "performance_metrics": {
            "metric_name": "float"
          },
          "model_file_available": "boolean"
        },
        "explainability_summary": {
          "tool_used": "string | null",
          "features_explained": "integer | null",
          "samples_used": "integer | null",
          "shap_plot_available": "boolean",
          "shap_plot_filename": "string | null"
        },
        "available_downloads": {
          "original_data": "boolean",
          "cleaned_data": "boolean",
          "metadata_json": "boolean",
          "validation_report": "boolean",
          "profile_report": "boolean",
          "model_artifacts": "boolean",
          "shap_plot": "boolean",
          "pipeline_log": "boolean",
          "file_sizes": {
            "filename": "float (KB)"
          }
        },
        "prediction_readiness": {
          "prediction_ready": "boolean",
          "model_file_available": "boolean",
          "column_mapping_available": "boolean",
          "original_data_available": "boolean",
          "metadata_available": "boolean"
        }
      }
    },
    "/api/prediction-schema": {
      "method": "GET",
      "summary": "Get prediction input schema (basic)",
      "parameters": {
        "run_id": "string (required)"
      },
      "response": {
        "api_version": "v1",
        "numeric_columns": {
          "column_name": {
            "min": "float",
            "max": "float",
            "mean": "float",
            "std": "float"
          }
        },
        "categorical_columns": {
          "column_name": {
            "options": ["string array"],
            "default": "string"
          }
        },
        "target_info": {}
      }
    },
    "/api/predict": {
      "method": "POST",
      "summary": "Make prediction (basic)",
      "request": {
        "run_id": "string",
        "input_values": {
          "column_name": "value"
        }
      },
      "response": {
        "api_version": "v1",
        "prediction_value": "any",
        "confidence": "float | null (0-1)",
        "input_features": {},
        "task_type": "string",
        "target_column": "string",
        "model_name": "string | null"
      }
    },
    "/api/predict/enhanced": {
      "method": "POST",
      "summary": "Enhanced prediction with feature importance from results",
      "description": "Combines reliable prediction logic with global feature importance data. Replaces the problematic /predict/single endpoint.",
      "request": {
        "run_id": "string",
        "input_values": {
          "column_name": "value"
        }
      },
      "response": {
        "api_version": "v1",
        "prediction_value": "any",
        "confidence": "float | null (0-1)",
        "input_features": {
          "column_name": "processed_value"
        },
        "feature_importance": ["string array (ordered by importance)"],
        "feature_importance_scores": {
          "feature_name": "float (0-1)"
        },
        "task_type": "string",
        "target_column": "string",
        "model_name": "string | null",
        "prediction_timestamp": "string (ISO format)",
        "shap_plot_available": "boolean",
        "explainability_available": "boolean"
      }
    },
    "/api/download/{run_id}/{filename}": {
      "method": "GET",
      "summary": "Download result files from GCS",
      "parameters": {
        "run_id": "string (required)",
        "filename": "string (required)"
      },
      "response": "File download (binary)"
    }
  },
  "common_types": {
    "task_types": ["classification", "regression"],
    "pipeline_statuses": ["pending", "running", "processing", "completed", "failed"],
    "contribution_directions": ["positive", "negative", "neutral"],
    "available_files": [
      "original_data.csv",
      "cleaned_data.csv", 
      "metadata.json",
      "validation_report.html",
      "profile_report.html",
      "pycaret_pipeline.pkl",
      "shap_plot.png",
      "pipeline.log"
    ]
  },
  "deprecated_endpoints": {
    "/api/predict/single": {
      "status": "REMOVED",
      "reason": "Had issues with zero feature values",
      "replacement": "/api/predict/enhanced",
      "migration_notes": "Use /api/predict/enhanced instead. Same input format but more reliable output."
    },
    "/api/predict/explain/{prediction_id}": {
      "status": "REMOVED", 
      "reason": "Complex SHAP calculations caused performance issues",
      "replacement": "/api/predict/enhanced + /api/results",
      "migration_notes": "Use /api/predict/enhanced for predictions with feature importance, and /api/results for SHAP plots."
    },
    "/api/predict/batch": {
      "status": "REMOVED",
      "reason": "Complex batch processing - can be re-implemented if needed",
      "replacement": "Multiple calls to /api/predict/enhanced",
      "migration_notes": "Make individual calls to /api/predict/enhanced for each prediction."
    },
    "/api/predict/compare": {
      "status": "REMOVED",
      "reason": "Complex comparison logic - can be re-implemented if needed", 
      "replacement": "Multiple calls to /api/predict/enhanced",
      "migration_notes": "Make individual calls to /api/predict/enhanced and compare results client-side."
    },
    "/api/prediction-schema-enhanced": {
      "status": "REMOVED",
      "reason": "Complex schema generation - use basic schema instead",
      "replacement": "/api/prediction-schema",
      "migration_notes": "Use /api/prediction-schema for input validation and /api/results for feature importance."
    }
  },
  "usage_flow": {
    "1": "POST /api/upload - Upload CSV file",
    "2": "GET /api/target-suggestion - Get AI suggestions for target",
    "3": "POST /api/confirm-target - Confirm target column",
    "4": "GET /api/feature-suggestion - Get feature suggestions",
    "5": "POST /api/confirm-features - Confirm features, starts pipeline",
    "6": "GET /api/status - Poll for pipeline completion",
    "7": "GET /api/results - Get final results when completed",
    "8": "GET /api/prediction-schema - Get prediction form schema",
    "9": "POST /api/predict/enhanced - Make predictions with feature importance"
  }
} 